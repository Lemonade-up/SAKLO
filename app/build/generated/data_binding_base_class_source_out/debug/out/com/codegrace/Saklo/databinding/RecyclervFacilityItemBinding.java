// Generated by view binder compiler. Do not edit!
package com.codegrace.Saklo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.codegrace.Saklo.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclervFacilityItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivLocateRec;

  @NonNull
  public final ImageView ivPhoneRec;

  @NonNull
  public final CardView recyclerCard;

  @NonNull
  public final TextView recyclerClassif;

  @NonNull
  public final ShapeableImageView recyclerImage;

  @NonNull
  public final TextView recyclerLocation;

  @NonNull
  public final TextView recyclerName;

  @NonNull
  public final TextView recyclerType;

  private RecyclervFacilityItemBinding(@NonNull CardView rootView, @NonNull ImageView ivLocateRec,
      @NonNull ImageView ivPhoneRec, @NonNull CardView recyclerCard,
      @NonNull TextView recyclerClassif, @NonNull ShapeableImageView recyclerImage,
      @NonNull TextView recyclerLocation, @NonNull TextView recyclerName,
      @NonNull TextView recyclerType) {
    this.rootView = rootView;
    this.ivLocateRec = ivLocateRec;
    this.ivPhoneRec = ivPhoneRec;
    this.recyclerCard = recyclerCard;
    this.recyclerClassif = recyclerClassif;
    this.recyclerImage = recyclerImage;
    this.recyclerLocation = recyclerLocation;
    this.recyclerName = recyclerName;
    this.recyclerType = recyclerType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclervFacilityItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclervFacilityItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recyclerv_facility_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclervFacilityItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_locate_rec;
      ImageView ivLocateRec = ViewBindings.findChildViewById(rootView, id);
      if (ivLocateRec == null) {
        break missingId;
      }

      id = R.id.iv_phone_rec;
      ImageView ivPhoneRec = ViewBindings.findChildViewById(rootView, id);
      if (ivPhoneRec == null) {
        break missingId;
      }

      CardView recyclerCard = (CardView) rootView;

      id = R.id.recyclerClassif;
      TextView recyclerClassif = ViewBindings.findChildViewById(rootView, id);
      if (recyclerClassif == null) {
        break missingId;
      }

      id = R.id.recyclerImage;
      ShapeableImageView recyclerImage = ViewBindings.findChildViewById(rootView, id);
      if (recyclerImage == null) {
        break missingId;
      }

      id = R.id.recyclerLocation;
      TextView recyclerLocation = ViewBindings.findChildViewById(rootView, id);
      if (recyclerLocation == null) {
        break missingId;
      }

      id = R.id.recyclerName;
      TextView recyclerName = ViewBindings.findChildViewById(rootView, id);
      if (recyclerName == null) {
        break missingId;
      }

      id = R.id.recyclerType;
      TextView recyclerType = ViewBindings.findChildViewById(rootView, id);
      if (recyclerType == null) {
        break missingId;
      }

      return new RecyclervFacilityItemBinding((CardView) rootView, ivLocateRec, ivPhoneRec,
          recyclerCard, recyclerClassif, recyclerImage, recyclerLocation, recyclerName,
          recyclerType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
